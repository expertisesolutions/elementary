class Elm_Flipselector (Elm_Layout)
{
   eo_prefix: elm_obj_flipselector;
   properties {
      first_interval {
         set {
            /*@
            Set the interval on time updates for a user mouse button hold
            on a flip selector widget.

            This interval value is @b decreased while the user holds the
            mouse pointer either flipping up or flipping down a given flip
            selector.

            This helps the user to get to a given item distant from the
            current one easier/faster, as it will start to flip quicker and
            quicker on mouse button holds.

            The calculation for the next flip interval value, starting from
            the one set with this call, is the previous interval divided by
            1.05, so it decreases a little bit.

            The default starting interval value for automatic flips is
            @b 0.85 seconds.

            @see elm_flipselector_first_interval_get()

            @ingroup Flipselector */
         }
         get {
            /*@
            Get the interval on time updates for an user mouse button hold
            on a flip selector widget.

            @return The (first) interval value, in seconds, set on it

            @see elm_flipselector_first_interval_set() for more details

            @ingroup Flipselector */
         }
         values {
            double interval; /*@ The (first) interval value in seconds */
         }
      }
      items {
         get {
            /*@
            Get the internal list of items in a given flip selector widget.

            @return The list of items (#Elm_Object_Item as data) or
            @c NULL on errors.

            This list is @b not to be modified in any way and must not be
            freed. Use the list members with functions like
            elm_object_item_text_set(),
            elm_object_item_text_get(),
            elm_object_item_del(),
            elm_flipselector_item_selected_get(),
            elm_flipselector_item_selected_set().

            @warning This list is only valid until @p obj object's internal
            items list is changed. It should be fetched again with another
            call to this function when changes happen.

            @ingroup Flipselector */
            return const Eina_List *;
         }
      }
      first_item {
         get {
            /*@
            Get the first item in the given flip selector widget's list of
            items.

            @return The first item or @c NULL, if it has no items (and on
            errors)

            @see elm_flipselector_item_append()
            @see elm_flipselector_last_item_get()

            @ingroup Flipselector */
            return Elm_Object_Item *;
         }
      }
      last_item {
         get {
            /*@
            Get the last item in the given flip selector widget's list of
            items.

            @return The last item or @c NULL, if it has no items (and on
            errors)

            @see elm_flipselector_item_prepend()
            @see elm_flipselector_first_item_get()

            @ingroup Flipselector */
            return Elm_Object_Item *;
         }
      }
      selected_item {
         get {
            /*@
            Get the currently selected item in a flip selector widget.

            @return The selected item or @c NULL, if the widget has no items
            (and on errors)

            @ingroup Flipselector */
            return Elm_Object_Item *;
         }
      }
   }
   methods {
      item_prepend {
         /*@
         Prepend a (text) item to a flip selector widget

         @return A handle to the item added or @c NULL, on errors

         The widget's list of labels to show will be prepended with the
         given value. If the user wishes so, a callback function pointer
         can be passed, which will get called when this same item is
         selected.

         @note The current selection @b won't be modified by prepending
         an element to the list.

         @note The maximum length of the text label is going to be
         determined <b>by the widget's theme</b>. Strings larger than
         that value are going to be @b truncated.

         @ingroup Flipselector */

         return Elm_Object_Item *;
         params {
            @in const char *label; /*@ The (text) label of the new item */
            @in Evas_Smart_Cb func; /*@ Convenience callback function to take place when
            item is selected */
            @in void *data; /*@ Data passed to @p func, above */
         }
      }
      flip_next {
         /*@
         Programmatically select the next item of a flip selector widget

         @note The selection will be animated. Also, if it reaches the
         end of its list of member items, it will continue with the first
         one onwards.

         @ingroup Flipselector */

      }
      item_append {
         /*@
         Append a (text) item to a flip selector widget

         @return A handle to the item added or @c NULL, on errors

         The widget's list of labels to show will be appended with the
         given value. If the user wishes so, a callback function pointer
         can be passed, which will get called when this same item is
         selected.

         @note The current selection @b won't be modified by appending an
         element to the list.

         @note The maximum length of the text label is going to be
         determined <b>by the widget's theme</b>. Strings larger than
         that value are going to be @b truncated.

         @ingroup Flipselector */

         return Elm_Object_Item *;
         params {
            @in const char *label; /*@ The (text) label of the new item */
            @in Evas_Smart_Cb func; /*@ Convenience callback function to take place when
            item is selected */
            @in const void *data; /*@ Data passed to @p func, above */
         }
      }
      flip_prev {
         /*@
         Programmatically select the previous item of a flip selector
         widget

         @note The selection will be animated.  Also, if it reaches the
         beginning of its list of member items, it will continue with the
         last one backwards.

         @ingroup Flipselector */

      }
   }
   implements {
      class::constructor;
      Eo_Base::constructor;
      Evas_Object_Smart::add;
      Evas_Object_Smart::del;
      Elm_Widget::theme_apply;
      Elm_Widget::focus_next_manager_is;
      Elm_Widget::focus_direction_manager_is;
      Elm_Widget::event;
      Elm_Layout::sizing_eval;
   }
   events {
      selected;
      underflowed;
      overflowed;
      language,changed;
      access,changed;
      focused;
      unfocused;
   }

}
